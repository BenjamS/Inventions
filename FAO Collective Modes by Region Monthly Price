#setwd('D:/OneDrive - CGIAR/Documents')
library(stats)
library(plyr)
library(ggplot2)
library(ggrepel)
library(dplyr)
library(tidyr)
library(zoo)

#-----------
#--Africa
countries_NAfrica <- as.character(unique(read.csv("Country list - Northern Africa.csv")[,"Area"]))
countries_MAfrica <- as.character(unique(read.csv("Country list - Middle Africa.csv")[,"Area"]))
countries_WAfrica <- as.character(unique(read.csv("Country list - Western Africa.csv")[,"Area"]))
countries_EAfrica <- as.character(unique(read.csv("Country list - Eastern Africa.csv")[,"Area"]))
countries_SAfrica <- as.character(unique(read.csv("Country list - Southern Africa.csv")[,"Area"]))
#--Americas
countries_SAmer <- as.character(unique(read.csv("Country list - South America.csv")[,"Area"]))
countries_CAmer <- as.character(unique(read.csv("Country list - Central America.csv")[,"Area"]))
countries_Carib <- as.character(unique(read.csv("Country list - Caribbean.csv")[,"Area"]))
countries_NAmer <- as.character(unique(read.csv("Country list - Northern America.csv")[,"Country"]))
#--Asia
countries_EAsia <- as.character(unique(read.csv("Country list - Eastern Asia.csv")[,"Area"]))
#countries_EAsia <- countries_EAsia[!(countries_EAsia %in% c("China, Hong Kong SAR", "China, Macao SAR"))]
countries_SEAsia <- as.character(unique(read.csv("Country list - South-Eastern Asia.csv")[,"Area"]))
countries_SAsia <- as.character(unique(read.csv("Country list - Southern Asia.csv")[,"Area"]))
countries_WAsia <- as.character(unique(read.csv("Country list - Western Asia.csv")[,"Area"]))
countries_CAsia <- as.character(unique(read.csv("Country list - Central Asia.csv")[,"Area"]))
#--Europe
countries_NEurope <- as.character(unique(read.csv("Country list - Northern Europe.csv")[,"Area"]))
countries_WEurope <- as.character(unique(read.csv("Country list - Western Europe.csv")[,"Area"]))
countries_EEurope <- as.character(unique(read.csv("Country list - Eastern Europe.csv")[,"Area"]))
countries_SEurope <- as.character(unique(read.csv("Country list - Southern Europe.csv")[,"Area"]))
#--Oceania
countries_Oceania <- as.character(unique(read.csv("Country list - Oceania.csv")[,"Area"]))
countries_AusNZea <- c("Australia", "New Zealand")
countries_PacifIs <- setdiff(countries_Oceania, countries_AusNZea)
#-----------

Pulses_vec <- c("Beans, dry", "Lentils", "Cow peas, dry", "Broad beans, horse beans, dry", "Chick peas")
Cereal_vec <- c("Rice, paddy", "Sorghum", "Wheat", "Millet", "Maize", "Rye", "Barley")
RnT_vec <- c("Cassava", "Potatoes", "Sweet potatoes", "Yams")
Oil_vec <- c("Soybeans", "Palm kernels", "Cottonseed", "Oil, palm", 
             "Castor oil seed", "Oil, palm fruit", "Linseed", "Sunflower seed")
Fruit_vec <- c("Bananas", "Papayas", "Oranges", 
               "Tangerines, mandarins, clementines, satsumas", "Grapefruit (inc. pomelos)",
               "Coconuts", "Mangoes, mangosteens, guavas")
textileIndustrial_vec <- c("Wool, greasy", "Rubber, natural", "Cotton lint", "Sugar cane")
teaCoffeeCacao_vec <- c("Coffee, green", "Cocoa, beans", "Tea")
#--
item_vec <- c(Pulses_vec, Cereal_vec, RnT_vec, Oil_vec, Fruit_vec,
              textileIndustrial_vec, teaCoffeeCacao_vec)
#--
df_raw <- read.csv("Prices_Monthly_E_All_Data.csv", stringsAsFactors = F)
df_raw$Months.Code <- NULL
df_raw$Item.Code <- NULL
df_raw$Area.Code <- NULL
df_raw$Element.Code <-NULL
df_raw$Unit <- NULL
df_raw$Element <- NULL
df_raw$Item <- as.character(df_raw$Item)
df_raw$Area <- as.character(df_raw$Area)
u <- colnames(df_raw)
df_raw <- df_raw[, -grep("F", u)]
colnames(df_raw)[4:ncol(df_raw)] <- as.character(c(2010:2015))
df_raw <- gather(df_raw, Year, Value,`2010`:`2015`)
rm(u)
#-------------
#--Create region groupings
u <- df_raw$Area
df_raw$Region <- NA
df_raw$Region[which(u %in% countries_NAmer)] <- "North America"
df_raw$Region[which(u %in% countries_SAmer)] <- "South America"
df_raw$Region[which(u %in% countries_CAmer)] <- "Central America"
df_raw$Region[which(u %in% countries_Carib)] <- "Caribbean"
df_raw$Region[which(u %in% countries_NAfrica)] <- "Northern Africa"
df_raw$Region[which(u %in% countries_SAfrica)] <- "Southern Africa"
df_raw$Region[which(u %in% countries_WAfrica)] <- "Western Africa"
df_raw$Region[which(u %in% countries_EAfrica)] <- "Eastern Africa"
df_raw$Region[which(u %in% countries_MAfrica)] <- "Middle Africa"
df_raw$Region[which(u %in% countries_CAsia)] <- "Central Asia"
df_raw$Region[which(u %in% countries_WAsia)] <- "Western Asia"
df_raw$Region[which(u %in% countries_SAsia)] <- "Southern Asia"
df_raw$Region[which(u %in% countries_EAsia)] <- "Eastern Asia"
df_raw$Region[which(u %in% countries_SEAsia)] <- "South-Eastern Asia"
df_raw$Region[which(u %in% countries_NEurope)] <- "Northern Europe"
df_raw$Region[which(u %in% countries_SEurope)] <- "Southern Europe"
df_raw$Region[which(u %in% countries_WEurope)] <- "Western Europe"
df_raw$Region[which(u %in% countries_EEurope)] <- "Eastern Europe"
df_raw$Region[which(u %in% countries_PacifIs)] <- "Pacific Islands"
df_raw$Region[which(u %in% countries_AusNZea)] <- "Australia & New Zealand"
#--See what countries escaped designation
#unique(df_raw$Area[which(is.na(df_raw$Region))])
#--Assign these to their proper regions
#(Leave out "China" as it is already covered under "China, mainlaind", "Hong Kong", etc.)
df_raw$Region[which(u %in% c("Åland Islands", "Isle of Man", "Greenland"))] <- "Northern Europe"
df_raw$Region[which(u %in% c("Anguilla", "Bermuda", "Cayman Islands", "Curaçao"))] <- "Caribbean"
df_raw$Region[which(u %in% c("Côte d'Ivoire"))] <- "Western Africa"
df_raw$Region[which(u %in% c("Palau"))] <- "Pacific Islands"
df_raw$Region[which(u %in% c("Maldives", "Réunion"))] <- "Southern Asia"
df_raw$Region[which(u %in% c("French Guiana"))] <- "South America"
df_raw <- df_raw[which(is.na(df_raw$Region) == F),]
rm(u)
#--
LAC <- c("Central America", "Caribbean", "South America")
Europe_E <- "Eastern Europe"
Europe_WNS <- c("Southern Europe", "Western Europe", "Northern Europe")
SSA <- c("Eastern Africa", "Southern Africa", "Western Africa", "Middle Africa")
ESE_Asia <- c("South-Eastern Asia", "Eastern Asia")
u <- df_raw$Region
df_raw$Region[which(u %in% LAC)] <- "LAC"
df_raw$Region[which(u %in% Europe_E)] <- "E. Europe"
df_raw$Region[which(u %in% Europe_WNS)] <- "W., N., & S. Europe"
df_raw$Region[which(u %in% SSA)] <- "Sub-Saharan Africa"
df_raw$Region[which(u %in% ESE_Asia)] <- "E. & S.E. Asia"
#--
df_raw$Group <- NA
u <- df_raw$Item
df_raw$Group[which(u %in% Cereal_vec)] <- "Cereals"
df_raw$Group[which(u %in% RnT_vec)] <- "RnT"
df_raw$Group[which(u %in% Pulses_vec)] <- "Pulses"
df_raw$Group[which(u %in% teaCoffeeCacao_vec)] <- "Tea, Coffee, Cacao"
df_raw$Group[which(u %in% textileIndustrial_vec)] <- "Textiles & Industrial"
df_raw$Group[which(u %in% Oil_vec)] <- "Oil crops"
df_raw$Group[which(u %in% Fruit_vec)] <- "Fruit"
#--
df_raw$YearMonth <- as.character(paste(df_raw$Year, df_raw$Months))
df_raw$YearMonth <- as.yearmon(df_raw$YearMonth, format = "%Y %B")
#library(zoo)
#--
df <- subset(df_raw, Item %in% item_vec)
#--
#==========

these_regions <- c("E. & S.E. Asia")
#these_items <- c("Cassava", "Maize", "Wheat", "Rice, paddy")
#these_groups <- c("Cereals")
these_groups <- c("RnT")
#these_groups <- c("Oil crops")
#these_groups <- c("Textiles & Industrial")
df_clean <- subset(df, Region %in% these_regions)
#df_plot <- subset(df_plot, Item %in% these_items)
df_clean <- subset(df_clean, Group %in% these_groups)
df_clean <- df_clean %>% group_by(Area, Item, Year) %>% mutate(zValue = scale(Value))
df_clean <- as.data.frame(df_clean)
gg <- ggplot(df_clean, aes(x = YearMonth, y = zValue, group = Item, color = Item))
gg <- gg + geom_line() + facet_wrap(~Area, ncol = 2, scales = "free")
gg
months_vec <- unique(df_clean$Months)
df_clean <- as.data.frame(df_clean %>% group_by(Area, Item, Year) %>%
  mutate(nMonths = length(Months)))
df_clean <- subset(df_clean, nMonths == 12)
unique(df_clean$Area)
gg <- ggplot(df_clean, aes(x = YearMonth, y = zValue, group = Item, color = Item))
gg <- gg + geom_line() + facet_wrap(~Area, ncol = 2, scales = "free")
gg
df_clean <- as.data.frame(df_clean %>% group_by(Area, Item) %>%
  mutate(isMiss = ifelse(is.nan(Value) | is.na(Value) | is.infinite(Value), 1, 0)))
df_clean <- as.data.frame(df_clean %>% group_by(Area, Item) %>%
  mutate(nMiss = sum(isMiss)))
df_clean <- subset(df_clean, nMiss <= 20)
gg <- ggplot(df_clean, aes(x = YearMonth, y = zValue, group = Item, color = Item))
gg <- gg + geom_line() + facet_wrap(~Area, ncol = 2, scales = "free")
gg






#==========
these_regions <- c("E. & S.E. Asia")
#these_items <- c("Cassava", "Maize", "Wheat", "Rice, paddy")
#these_groups <- c("Oil crops")
these_groups <- c("Textiles & Industrial")
df_plot <- subset(df, Region %in% these_regions)
#df_plot <- subset(df_plot, Item %in% these_items)
df_plot <- subset(df_plot, Group %in% these_groups)
#unique(df_plot$Area)
df_plot <- df_plot %>% group_by(Area, Item, Year) %>% mutate(zValue = scale(Value))
df_plot <- as.data.frame(df_plot)
gg <- ggplot(df_plot, aes(x = YearMonth, y = zValue, group = Item, color = Item))
gg <- gg + geom_line() + facet_wrap(~Area, ncol = 2, scales = "free")
gg
#=============================
Philippines_Rubber <- subset(df, Area == "Philippines" & Item == "Rubber, natural")
China_Sugar <- subset(df, Area == "China, mainland" & Item == "Sugar cane")
Vietnam_Rubber <- subset(df, Area == "Viet Nam" & Item == "Rubber, natural")
df_keep <- data.frame(Philippines_Rubber = 
  
)
#=============================
# Interpolate missing data by
# leveraging inherent periodicity of
# monthly price data.
Interpol <- list()
#=============================
# Malaysia Cassava
df_plot2 <- subset(df, Item == "Cassava" & Area == "Malaysia")
df_plot2 <- df_plot2 %>% group_by(Area, Item, Year) %>% mutate(zValue = scale(Value))
df_plot2 <- as.data.frame(df_plot2)
df_plot2 <- df_plot2[, c("YearMonth", "zValue")]
#diff(which(is.na(df_plot2$zValue) == F))
#df_plot2 <- df_plot2[which(is.na(df_plot2$zValue) == F), ]
ggplot(df_plot2, aes(x = YearMonth, y = zValue)) + geom_line()
#diff(which(is.na(df_plot2$zValue) == F))
ts <- df_plot2$zValue[which(is.na(df_plot2$zValue) == F)]
t <- 1:length(ts)
ssp <- spectrum(ts)
df_per <- data.frame(per = 1 / ssp$freq, spec = ssp$spec)
df_per <- df_per[order(df_per$spec, decreasing = T), ]
df_per

# per1 <- df_per$per[1]
# per2 <- df_per$per[2]
# per3 <- df_per$per[3]
# per4 <- df_per$per[4]
# per5 <- df_per$per[5]
# per6 <- df_per$per[6]
# per7 <- df_per$per[7]
# per8 <- df_per$per[8]
# per9 <- df_per$per[9]
# per10 <- df_per$per[10]
# per11 <- df_per$per[11]
# per12 <- df_per$per[12]
# per13 <- df_per$per[13]
# per14 <- df_per$per[14]
# per15 <- df_per$per[15]
# #--
# reslm <- lm(ts ~ -1 + sin(2 * pi / per1 * t) + cos(2 * pi / per1 * t) +
#               sin(2 * pi / per2 * t) + 
#               sin(2 * pi / per3 * t) +
#               sin(2 * pi / per4 * t) +
#               sin(2 * pi / per5 * t) +
#               sin(2 * pi / per6 * t) +
#               sin(2 * pi / per7 * t) +
#               cos(2 * pi / per8 * t) +
#               cos(2 * pi / per9 * t) +
#               cos(2 * pi / per10 * t) +
#               sin(2 * pi / per12 * t) +
#               sin(2 * pi / per13 * t) + cos(2 * pi / per13 * t) +
#               sin(2 * pi / per14 * t)
# )
# summary(reslm)
# rg <- diff(range(ts))
# plot(ts~t,ylim=c(min(ts)-0.1*rg,max(ts)+0.1*rg))
# lines(fitted(reslm)~t,col=4,lty=2)   # dashed blue line is sin fit

per <- df_per$per
n_periods <- 14
regrsrs_sin <- paste0("sin(2 * pi / per[", c(1:n_periods), "] * t)", collapse = " + ")
regrsrs_cos <- paste0("cos(2 * pi / per[", c(1:n_periods), "] * t)", collapse = " + ")
regrsrs <- paste(regrsrs_sin, regrsrs_cos, sep = " + ")
this_formula <- as.formula(paste("ts ~ -1 +", regrsrs)[1])
linmod <- lm(this_formula)
summod <- summary(linmod)
print(summod)
pvals <- as.numeric(summod$coefficients[, 4])
ind_rm <- which(pvals > 0.05)
regrsrs_char <- strsplit(as.character(regrsrs), " \\+ ")[[1]]
length(regrsrs_char)
regrsrs_char <- regrsrs_char[-ind_rm]
length(regrsrs_char)
regrsrs <- paste(regrsrs_char, collapse = " + ")
this_formula <- as.formula(paste("ts ~ -1 +", regrsrs)[1])
linmod <- lm(this_formula)
summod <- summary(linmod)
print(summod)
#--
yhat <- fitted(linmod)
# plot(t, ts)
# lines(t, yhat)
noise <- rnorm(length(yhat), 0, 0.2)
df_plot3 <- df_plot2
df_plot3$sinApprox <- NA
df_plot3$sinApprox[which(is.na(df_plot3$zValue) == F)] <- yhat + noise
df_plot3 <- df_plot3 %>% gather(Type, ts, zValue:sinApprox)
gg <- ggplot(df_plot3, aes(x = YearMonth, y = ts, color = Type))
gg <- gg + geom_line()
gg
#--
df_plot3 <- df_plot2
df_plot3$sinApprox <- NA
df_plot3$sinApprox[which(is.na(df_plot3$zValue) == T)] <- yhat + noise
df_plot3 <- df_plot3 %>% gather(Type, ts, zValue:sinApprox)
gg <- ggplot(df_plot3, aes(x = YearMonth, y = ts, color = Type))
gg <- gg + geom_line()
gg
#--
df_plot4 <- df_plot2
df_plot4$zValue[which(is.na(df_plot2$zValue))] <- yhat + noise
ggplot(df_plot4, aes(x = YearMonth, y = zValue)) + geom_line()
Interpol[[1]] <- data.frame(YearMonth = df_plot4$YearMonth, Cassava_Malaysia = df_plot4$zValue)
#=============================
# Indonesia Cassava
df_plot2 <- subset(df, Item == "Cassava" & Area == "Indonesia")
df_plot2 <- df_plot2 %>% group_by(Area, Item, Year) %>% mutate(zValue = scale(Value))
df_plot2 <- as.data.frame(df_plot2)
df_plot2 <- df_plot2[, c("YearMonth", "zValue")]
#diff(which(is.na(df_plot2$zValue) == F))
#df_plot2 <- df_plot2[which(is.na(df_plot2$zValue) == F), ]
ggplot(df_plot2, aes(x = YearMonth, y = zValue)) + geom_line()
#diff(which(is.na(df_plot2$zValue) == F))
ts <- df_plot2$zValue[which(is.na(df_plot2$zValue) == F)]
t <- 1:length(ts)
ssp <- spectrum(ts)
df_per <- data.frame(per = 1 / ssp$freq, spec = ssp$spec)
df_per <- df_per[order(df_per$spec, decreasing = T), ]
df_per
per1 <- df_per$per[1]
per2 <- df_per$per[2]
# per3 <- df_per$per[3]
# per4 <- df_per$per[4]
# per5 <- df_per$per[5]
# per6 <- df_per$per[6]
# per7 <- df_per$per[7]
# per8 <- df_per$per[8]
# per9 <- df_per$per[9]
# per10 <- df_per$per[10]
# per11 <- df_per$per[11]
# per12 <- df_per$per[12]
reslm <- lm(ts ~ -1 + sin(2 * pi / per1 * t) + cos(2 * pi / per1 * t) +
              sin(2 * pi / per2 * t) + cos(2 * pi / per2 * t))
summary(reslm)
rg <- diff(range(ts))
plot(ts~t,ylim=c(min(ts)-0.1*rg,max(ts)+0.1*rg))
lines(fitted(reslm)~t,col=4,lty=2)   # dashed blue line is sin fit
#--
df_plot3 <- df_plot2
df_plot3$sinApprox <- NA
df_plot3$sinApprox[which(is.na(df_plot3$zValue) == F)] <- fitted(reslm)
df_plot3 <- df_plot3 %>% gather(Type, ts, zValue:sinApprox)
gg <- ggplot(df_plot3, aes(x = YearMonth, y = ts, color = Type))
gg <- gg + geom_line()
gg
#--
df_plot3 <- df_plot2
df_plot3$sinApprox <- NA
df_plot3$sinApprox[which(is.na(df_plot3$zValue) == T)] <- fitted(reslm)
df_plot3 <- df_plot3 %>% gather(Type, ts, zValue:sinApprox)
gg <- ggplot(df_plot3, aes(x = YearMonth, y = ts, color = Type))
gg <- gg + geom_line()
gg
#--
df_plot4 <- df_plot2
df_plot4$zValue[which(is.na(df_plot4$zValue))] <- fitted(reslm)
ggplot(df_plot4, aes(x = YearMonth, y = zValue)) + geom_line()
Interpol[[2]] <- data.frame(YearMonth = df_plot4$YearMonth, Cassava_Malaysia = df_plot4$zValue)
#=============================
# Vietnam Maize
df_plot2 <- subset(df, Item == "Maize" & Area == "Viet Nam")
df_plot2 <- df_plot2 %>% group_by(Area, Item, Year) %>% mutate(zValue = scale(Value))
df_plot2 <- as.data.frame(df_plot2)
df_plot2 <- df_plot2[, c("YearMonth", "zValue")]
diff(which(is.na(df_plot2$zValue) == F))
which(is.na(df_plot2$zValue) == F)
#df_plot2 <- df_plot2[which(is.na(df_plot2$zValue) == F), ]
ggplot(df_plot2, aes(x = YearMonth, y = zValue)) + geom_line()
ind <- which(is.na(df_plot2$zValue) == F)
# ind <- ind[1]:ind[length(ind)]
# u <- df_plot2$zValue
# df_plot2$zValue[ind[which(is.na(u[ind]))]] <- 0
#df_plot2$zValue[ind]
which(is.na(df_plot2$zValue) == F)
df_plot2$zValue[c(15, 18, 21)] <- NA
diff(which(is.na(df_plot2$zValue) == F))
ts <- df_plot2$zValue[24:60]
t <- 1:length(ts)
ssp <- spectrum(ts)
df_per <- data.frame(per = 1 / ssp$freq, spec = ssp$spec)
df_per <- df_per[order(df_per$spec, decreasing = T), ]
df_per
per1 <- df_per$per[1]
per2 <- df_per$per[2]
per3 <- df_per$per[3]
per4 <- df_per$per[4]
per5 <- df_per$per[5]
per6 <- df_per$per[6]
per7 <- df_per$per[7]
per8 <- df_per$per[8]
per9 <- df_per$per[9]
per10 <- df_per$per[10]
per11 <- df_per$per[11]
per12 <- df_per$per[12]
per13 <- df_per$per[13]
per14 <- df_per$per[14]
per15 <- df_per$per[15]
#--
reslm <- lm(ts ~ -1 + sin(2 * pi / per1 * t) + cos(2 * pi / per1 * t) +
              sin(2 * pi / per2 * t) + 
              sin(2 * pi / per3 * t) + cos(2 * pi / per3 * t) +
              cos(2 * pi / per4 * t) +
              sin(2 * pi / per5 * t) + cos(2 * pi / per5 * t) +
              cos(2 * pi / per6 * t)
)
summary(reslm)
rg <- diff(range(ts))
plot(ts~t,ylim=c(min(ts)-0.1*rg,max(ts)+0.1*rg))
lines(fitted(reslm)~t,col=4,lty=2)   # dashed blue line is sin fit
#--
yhat <- fitted(reslm)
noise <- rnorm(length(yhat), 0, 0.2)
df_plot3 <- df_plot2
df_plot3$sinApprox <- NA
df_plot3$sinApprox[which(is.na(df_plot3$zValue) == F)] <- yhat + noise
df_plot3 <- df_plot3 %>% gather(Type, ts, zValue:sinApprox)
gg <- ggplot(df_plot3, aes(x = YearMonth, y = ts, color = Type))
gg <- gg + geom_line()
gg
#--
df_plot3 <- df_plot2
df_plot3$sinApprox <- NA
df_plot3$sinApprox[which(is.na(df_plot3$zValue) == T)] <- yhat + noise
df_plot3 <- df_plot3 %>% gather(Type, ts, zValue:sinApprox)
gg <- ggplot(df_plot3, aes(x = YearMonth, y = ts, color = Type))
gg <- gg + geom_line()
gg
#--
df_plot4 <- df_plot2
df_plot4$zValue[which(is.na(df_plot2$zValue))] <- yhat + noise
ggplot(df_plot4, aes(x = YearMonth, y = zValue)) + geom_line()
Interpol[[3]] <- data.frame(YearMonth = df_plot4$YearMonth, Maize_Vietnam = df_plot4$zValue)
#=============================



























df <- df %>% group_by(Region, Area, Year, Item) %>%
  mutate(nMiss = length(which(is.na(Value))))
df <- as.data.frame(df)
length(which(is.na(df$Value)))
length(which(is.nan(df$Value)))
length(which(is.infinite(df$Value)))
df_agg <- df %>% group_by(Region, Item, Year, Months) %>% summarise(Value = mean(Value, na.rm = T))
length(which(is.na(df_agg$Value)))
length(which(is.nan(df_agg$Value)))
length(which(is.infinite(df_agg$Value)))
df_agg <- df_agg %>% group_by(Region, Year, Item) %>%
  mutate(nMiss = length(which(is.na(Value) | is.nan(Value))))
df_agg <- as.data.frame(df_agg)
#-----
#unique(df_agg$Region)
this_region <- "E. & S.E. Asia"
#-----
df_a <- subset(df_agg, Region %in% this_region)
length(which(is.na(df_a$Value)))
length(which(is.nan(df_a$Value)))
length(which(is.infinite(df_a$Value)))
df_group <- df_a
item_rm <- unique(df_a$Item[which(df_a$nMiss > 5)])
df_a <- subset(df_a, !(Item %in% items_rm))
setdiff(item_vec, items_rm)
# df_group <- subset(df_a, Year == 2015 & Months == "January")
#   df_group[, c("Group", "Item")]
# col_order <- df_group$Item



df_price$nMiss <- NULL
df_price$Group <- NULL
df_price$Area <- NULL
df_price <- as.data.frame(df_price)
df_mat <- df_price %>% spread(Item, Price)
colnames(df_mat)
row.names(df_mat) <- df_mat$Year
df_mat$Year <- NULL
colnames(df_mat)
df_mat <- df_mat[, col_order]
difflnMat <- diff(as.matrix(log(df_mat)))
ts_mat <- difflnMat
cormat <- cor(ts_mat)
image(cormat)
#--
eig_vectors <- -eigen(cormat)$vectors
lam_cor <- eigen(cormat)$values
lamcor_max <- max(lam_cor)
N_t <- nrow(ts_mat)
N_c <- ncol(ts_mat)
Q <- N_t / N_c
s_sq <- 1 - lamcor_max / N_c
#s_sq <- 1
lamrand_max <- s_sq * (1 + 1 / Q + 2 / sqrt(Q))
lamrand_min <- s_sq * (1 + 1 / Q - 2 / sqrt(Q))
lam <- seq(lamrand_min, lamrand_max, 0.2)
dens_rand <- Q / (2 * pi * s_sq) * sqrt((lamrand_max - lam) * (lam - lamrand_min)) / lam
#--
df_e <- data.frame(values = lam_cor)
gg <- ggplot() + geom_density(data = df_e, aes(x = values), color = "blue") + coord_cartesian(xlim = c(0, ceiling(lamcor_max)))
gg <- gg + geom_line(data = data.frame(x = lam, y = dens_rand), aes(x = x, y = y), linetype = "dotted")
gg
#--
ind_deviating_from_noise <- which(lam_cor > lamrand_max)
CollectiveModes <- as.matrix(eig_vectors[, ind_deviating_from_noise])
df_collectiveModes <- as.data.frame(CollectiveModes)
n_collectiveModes <- ncol(CollectiveModes)
print(paste("Number of collective modes: ", n_collectiveModes))
#Contributions of groups to each mode
n_all_ts <- length(col_order)
groups <- unique(df_group$Group)
n_groups <- length(groups)
N_in_group <- c()
Pvec_list <- list()
for(i in 1:n_groups){
  this_group <- groups[i]
  Pvec <- rep(0, n_all_ts)
  ind <- which(df_group$Group == this_group)
  ts_in_group <- df_group$Item[ind]
  n_in_group <- length(ts_in_group)
  Pvec[ind] <- 1 / n_in_group
  Pvec_list[[i]] <- Pvec
  N_in_group[i] <- n_in_group
}
Pmat <- as.matrix(do.call(cbind, Pvec_list))
nrow(Pmat)
nrow(df_collectiveModes)
Xkl <- t(Pmat) %*% CollectiveModes^2
#barplot(Xkl[, 9])
df_contrib <- as.data.frame(Xkl)
colnames(df_contrib) <- paste("lambda", c(1:n_collectiveModes))
df_contrib$Group <- groups
gathercols <- colnames(df_contrib)[1:n_collectiveModes]
df_contrib <- gather_(df_contrib, "Lambda", "Value", gathercols)
gg <- ggplot(df_contrib, aes(x = Group, y = Value)) + geom_bar(stat="identity")
gg <- gg + facet_wrap(~ Lambda, nrow = floor(n_collectiveModes / 2)) + theme(axis.text.x = element_text(angle = 60, hjust = 1))
gg



