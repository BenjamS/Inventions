---
title: Towards more rigor and precision in the identification and quantification of synergies/tradeoffs between strategic objectives
subtitle: Concept note
author: "Ben Schiek"
date: "July 7, 2019"
output:
  pdf_document:
    toc: true
    toc_depth: 4
    latex_engine: xelatex
mainfont: Calibri Light
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE,
                      message = FALSE,
                      warning = FALSE)

```

## I. Introduction
### I.i Problem background
At the most abstract levels of strategic planning, it is customary for large development agencies and donor organizations to carefully define a manageable number of thematic areas for investment that broadly cover all aspects of development. These thematic areas typically fall along the lines of

* Economic growth

* Economic equality, poverty reduction

* Food and nutritional security

* Environmental protection, conservation, reduced C02 emissions, etc.

* Health

Little or no care is taken, however, to address the tradeoffs that exist between investments in each of these thematic areas. It is well known, for example, that agriculture is often detrimental to the environment. This implies a tradeoff between the food security and environmental objectives. Economic growth, in its turn, is inversely related to both agricultural and environmental objectives. In many parts of the world, there is also a longstanding tradeoff between economic growth and economic equality. Investments in one thematic area can thus offset returns to investments in other thematic areas.

### I.ii Proposed solution: a PCA approach

In this concept note, I propose a rigorous, precise method for identifying and quantifying tradeoffs and synergies between strategic objectives (SOs). The method is based on principle components analysis (PCA) of a large dataset of development indicators spanning the usual thematic areas. (For a good overview of PCA, see Abdi & Williams (2010).) A variant of this approach has been applied in the analysis of financial market time series (Gopikrishnan et al., 2001). Here I enhance such precedents by also leveraging a rigorous signal selecting technique developed in the study of physical systems (Dehesa et al., 1983).

```{r, echo=FALSE}

setwd("D:/OneDrive - CGIAR/Documents")
#options(warn = -1); options(scipen = 999)
#-------------------------------------------------------------
library(plyr)
library(tidyverse)
library(ggplot2)
library(zoo)
library(FactoMineR)
library(factoextra)
library(ggpubr)
library(Hmisc)
library(corrplot)
#library(PerformanceAnalytics)
#-------------------------------------------------------------
WDI_raw <- read.csv("WDIData.csv", stringsAsFactors = F)
WDI_raw$Country.Code <- NULL
WDI_raw$Indicator.Code <- NULL
WDI_raw$X <- NULL
colnames(WDI_raw)[1:2] <- c("Country", "Indicator")
WDI_raw$Country <- as.character(WDI_raw$Country)
WDI_raw$Indicator <- as.character(WDI_raw$Indicator)
#unique(WDI_raw$Indicator)
#unique(WDI_raw$Indicator[grep("GDP", WDI_raw$Indicator)])
#unique(WDI_raw$Indicator[grep("manufacturing", WDI_raw$Indicator, ignore.case = T)])
colnames(WDI_raw)[3:ncol(WDI_raw)] <- as.character(c(1960:2018))
WDI_long <- WDI_raw %>% gather(Year, Value, `1960`:`2018`)
#unique(WDI_raw$Country)
country_vec <- c("Low income", "Lower middle income", "Middle income", "High income")
WDI_long <- subset(WDI_long, Country %in% country_vec)
#unique(WDI_long$Indicator)
#unique(WDI_raw$Indicator)[grep("Average", unique(WDI_raw$Indicator))]
#-------------------------------------------------------------
environmental_indicators <- c("CO2 emissions (metric tons per capita)", 
                              "Total natural resources rents (% of GDP)",
                              "Agricultural land (% of land area)",
                              "Land under cereal production (hectares)",
                              #"Forest area (% of land area)",
                              "Energy intensity level of primary energy (MJ/$2011 PPP GDP)",
                              "Renewable energy consumption (% of total final energy consumption)",
                              "Agricultural methane emissions (thousand metric tons of CO2 equivalent)",
                              "Agricultural nitrous oxide emissions (thousand metric tons of CO2 equivalent)",
                              "Forest rents (% of GDP)",
                              "Adjusted savings: net forest depletion (% of GNI)",
                              "Adjusted savings: mineral depletion (% of GNI)",
                              "Adjusted savings: energy depletion (% of GNI)",
                              "Level of water stress: freshwater withdrawal as a proportion of available freshwater resources",
                              "Access to clean fuels and technologies for cooking (% of population)",
                              "Renewable internal freshwater resources per capita (cubic meters)",
                              "Water productivity, total (constant 2010 US$ GDP per cubic meter of total freshwater withdrawal)"
)
#-------------------------------------------------------------
pop_indicators <- c(#"Birth rate, crude (per 1,000 people)",
  #"Death rate, crude (per 1,000 people)",
  "Urban population (% of total population)",
  "Rural population (% of total population)",
  "Urban population growth (annual %)",
  "Population growth (annual %)",
  #"Population ages 0-14, total",
  #"Population ages 0-14 (% of total)",
  #"Population ages 15-64, total",
  #"Population ages 15-64 (% of total)",
  #"Population ages 65 and above, total",
  #"Population ages 65 and above (% of total)",
  "Population density (people per sq. km of land area)",
  #"Population growth (annual %)",
  #"Refugee population by country or territory of origin",
  "Refugee population by country or territory of asylum"
  # "Population, total",
)
#-------------------------------------------------------------
economic_indicators <- c("Consumer price index (2010 = 100)",
                         "Foreign direct investment, net inflows (% of GDP)",
                         #"Export value index (2000 = 100)",
                         #"Import value index (2000 = 100)",
                         "Military expenditure (% of GDP)",
                         #"GDP per capita (current US$)",
                         "Net ODA received per capita (current US$)",
                         "Poverty headcount ratio at $1.90 a day (2011 PPP) (% of population)",
                         "Trade (% of GDP)",
                         #"GDP growth (annual %)",
                         "GDP per capita growth (annual %)",
                         #"Industry (including construction), value added (% of GDP)",
                         "Industry (including construction), value added (annual % growth)",
                         #"Manufacturing, value added (% of GDP)",
                         "Manufacturing, value added (annual % growth)",
                         #"Services, value added (% of GDP)",
                         "Services, value added (annual % growth)",
                         #"Agriculture, forestry, and fishing, value added (% of GDP)",
                         "Agriculture, forestry, and fishing, value added (annual % growth)",
                         #"Trade in services (% of GDP)",
                         "Exports of goods and services (annual % growth)",
                         "Imports of goods and services (annual % growth)",
                         "Medium and high-tech Industry (including construction) (% manufacturing value added)",
                         "Gross capital formation (annual % growth)",
                         "GINI index (World Bank estimate)"
                         #"Gross fixed capital formation (annual % growth)",
                         #"Final consumption expenditure (annual % growth)"
)
#-------------------------------------------------------------
infrastructure_indicators <- c("Access to electricity (% of population)",
                               "Access to electricity, urban (% of urban population)",
                               "Access to electricity, rural (% of rural population)",
                               "Mobile cellular subscriptions (per 100 people)",
                               "Individuals using the Internet (% of population)")
#-------------------------------------------------------------
employment_indicators <- c("Employment in agriculture (% of total employment) (modeled ILO estimate)",
                           "Employment in industry (% of total employment) (modeled ILO estimate)",
                           "Employment in services (% of total employment) (modeled ILO estimate)",
                           "Labor force participation rate, total (% of total population ages 15+) (modeled ILO estimate)",
                           #"Unemployment, total (% of total labor force) (modeled ILO estimate)",
                           "Agriculture, forestry, and fishing, value added per worker (constant 2010 US$)",
                           "Agriculture, value added per worker (constant 2010 US$)",
                           "Industry, value added per worker (constant 2010 US$)",
                           "Industry (including construction), value added per worker (constant 2010 US$)",
                           "Services, value added per worker (constant 2010 US$)",
                           #"Age dependency ratio, young (% of working-age population)",
                           #"Age dependency ratio, old (% of working-age population)",
                           "Age dependency ratio (% of working-age population)",
                           "Ratio of female to male labor force participation rate (%) (modeled ILO estimate)"
)
#-------------------------------------------------------------
health_indicators <- c("Mortality rate, under-5 (per 1,000 live births)",
                       "Incidence of HIV (% of uninfected population ages 15-49)",
                       "Life expectancy at birth, total (years)"
                       # "Life expectancy at birth, male (years)",
                       # "Life expectancy at birth, female (years)"
                       #"Prevalence of HIV, total (% of population ages 15-49)"
)
#-------------------------------------------------------------
educ_indicators <- c("Government expenditure on education, total (% of GDP)",
                     "School enrollment, primary (% gross)",
                     "School enrollment, secondary (% gross)",
                     "School enrollment, tertiary (% gross)",
                     "Adjusted savings: education expenditure (% of GNI)",
                     "Expenditure on primary education (% of government expenditure on education)",
                     "Expenditure on secondary education (% of government expenditure on education)",
                     "Expenditure on tertiary education (% of government expenditure on education)",
                     "Government expenditure on education, total (% of government expenditure)"
)

```

## 1. The data

A large set of indicators is selected from the World Bank's World Development Indicators (WDI) database. Indicators are selected so as to represent all aspects of international development---economy, environment, education, health, infrastructure, employment, and population. A rough map is assumed to exist between these indicators and the usual set of strategic objectives (the SDGs, for example).

The analysis can be conducted over any country or grouping of countries, data permitting. In the exercise below, I focus on WDI's "Lower middle income" countries category.

The WDI database has a lot of interesting indicators, but relatively few with a complete series going back more than two decades for a wide geographical area. This was the main limiting factor in selecting indicators for inclusion in the exercise. The final set of indicators are graphed by type below. There are 49 variables total, covering the years 1991-2016. A few of these series had as many as eight missing values, which were filled in by linear approximation.

```{r, fig.width=10, fig.height=4, fig.align='center', echo = FALSE}

indicator_vec <- c(pop_indicators, educ_indicators, employment_indicators,
                   health_indicators, economic_indicators,
                   environmental_indicators, infrastructure_indicators)
list_indicatorTypes <- list(pop_indicators, educ_indicators, employment_indicators,
                            health_indicators, economic_indicators,
                            environmental_indicators, infrastructure_indicators)
indicator_type_names <- c("Population", "Education", "Employment", "Health", "Economy", "Environment", "Infrastructure")
names(list_indicatorTypes) <- indicator_type_names
#-------------------------------------------------------------
these_countries <- "Lower middle income"
#-------------------------------------------------------------
df_WDI <- subset(WDI_long, Country %in% c(these_countries))
df_WDI <- subset(df_WDI, Indicator %in% indicator_vec)
df_WDI <- df_WDI %>% spread(Indicator, Value)
df_WDI$Year <- as.integer(df_WDI$Year)
df_WDI <- subset(df_WDI, Year >= 1991)
df_WDI <- subset(df_WDI, Year <= 2016)
df_WDI$`Individuals using the Internet (% of population)`[which(df_WDI$Year < 1994)] <- 0
#-------------------------------------------------------------
year_vec <- df_WDI$Year
df_WDI <- df_WDI[, -c(1, 2)]
out <- apply(df_WDI, 2, function(x) length(which(is.na(x))))
#table(out)
ind_rm <- which(as.numeric(out) > 10)
#length(ind_rm)
df_WDI <- df_WDI[, -ind_rm]
#ncol(df_WDI)
ind_rp <- which(is.na(df_WDI[1, ]))
for(i in 1:length(ind_rp)){
  df_WDI[1, ind_rp[i]] <- mean(df_WDI[, ind_rp[i]], na.rm = T)
}
ind_rp <- which(is.na(df_WDI[nrow(df_WDI), ]))
for(i in 1:length(ind_rp)){
  df_WDI[nrow(df_WDI), ind_rp[i]] <- mean(df_WDI[, ind_rp[i]], na.rm = T)
}

df_WDI <- as.data.frame(na.approx(df_WDI))
#class(df_WDI)
out <- apply(df_WDI, 2, function(x) length(which(is.na(x))))
#table(out)
#which(as.numeric(out) > 0)
#colnames(df_WDI)[which(as.numeric(out) > 0)]
mat_zWDI <- scale(df_WDI)
#------------------------------------------------------------
df_plot <- as.data.frame(mat_zWDI)
df_plot$Year <- year_vec
df_plot <- df_plot %>% gather_("Indicator", "Value", colnames(df_WDI))
df_plot$Type <- NA
df_plot$Type[which(df_plot$Indicator %in% pop_indicators)] <- "Population"
df_plot$Type[which(df_plot$Indicator %in% economic_indicators)] <- "Economy"
df_plot$Type[which(df_plot$Indicator %in% educ_indicators)] <- "Education"
df_plot$Type[which(df_plot$Indicator %in% employment_indicators)] <- "Employment"
df_plot$Type[which(df_plot$Indicator %in% environmental_indicators)] <- "Environment"
df_plot$Type[which(df_plot$Indicator %in% health_indicators)] <- "Health"
df_plot$Type[which(df_plot$Indicator %in% infrastructure_indicators)] <- "Infrastructure"
#------------------------------------------------------------
# gg <- ggplot(df_plot, aes(x = Year, y = Value, group = Indicator, color = Indicator))
# gg <- gg + geom_line()
# gg <- gg + facet_wrap(~ Type, nrow = 3, scales = "free")
# gg <- gg + theme(legend.position = "none")
# gg
#------------------------------------------------------------
this_type <- "Health"
df_plot2 <- subset(df_plot, Type == this_type)
gg <- ggplot(df_plot2, aes(x = Year, y = Value, group = Indicator, color = Indicator))
gg <- gg + geom_line(lwd = 1.1)
gg <- gg + geom_point(size = 2)
gg <- gg + labs(title = this_type)
gg_health <- gg
gg
this_type <- "Education"
df_plot2 <- subset(df_plot, Type == this_type)
gg <- ggplot(df_plot2, aes(x = Year, y = Value, group = Indicator, color = Indicator))
gg <- gg + geom_line(lwd = 1.1)
gg <- gg + geom_point(size = 2)
gg <- gg + labs(title = this_type)
gg_educ <- gg
gg
this_type <- "Economy"
df_plot2 <- subset(df_plot, Type == this_type)
gg <- ggplot(df_plot2, aes(x = Year, y = Value, group = Indicator, color = Indicator))
gg <- gg + geom_line(lwd = 1.1)
gg <- gg + geom_point(size = 2)
gg <- gg + labs(title = this_type)
gg_econ <- gg
gg
this_type <- "Employment"
df_plot2 <- subset(df_plot, Type == this_type)
gg <- ggplot(df_plot2, aes(x = Year, y = Value, group = Indicator, color = Indicator))
gg <- gg + geom_line(lwd = 1.1)
gg <- gg + geom_point(size = 2)
gg <- gg + labs(title = this_type)
gg_employ <- gg
gg
this_type <- "Environment"
df_plot2 <- subset(df_plot, Type == this_type)
gg <- ggplot(df_plot2, aes(x = Year, y = Value, group = Indicator, color = Indicator))
gg <- gg + geom_line(lwd = 1.1)
gg <- gg + geom_point(size = 2)
gg <- gg + labs(title = this_type)
gg_environ <- gg
gg
this_type <- "Population"
df_plot2 <- subset(df_plot, Type == this_type)
gg <- ggplot(df_plot2, aes(x = Year, y = Value, group = Indicator, color = Indicator))
gg <- gg + geom_line(lwd = 1.1)
gg <- gg + geom_point(size = 2)
gg <- gg + labs(title = this_type)
gg_pop <- gg
gg
this_type <- "Infrastructure"
df_plot2 <- subset(df_plot, Type == this_type)
gg <- ggplot(df_plot2, aes(x = Year, y = Value, group = Indicator, color = Indicator))
gg <- gg + geom_line(lwd = 1.1)
gg <- gg + geom_point(size = 2)
gg <- gg + labs(title = this_type)
gg_infrastr <- gg
gg
#ggarrange(gg_health, gg_educ, gg_econ, gg_pop, gg_environ, gg_infrastr, ncol = 1)
#grid.arrange(gg_health, gg_educ, gg_econ, gg_pop, gg_environ, gg_infrastr)
```

## 2. Finding historical tradeoffs and synergies in the data

### 2.1 The correlation matrix approach for small numbers of variables

For a manageable number of variables, there is no need to get too fancy. You can just look at the correlation matrix. Below is a correlation matrix of just the economic variables. (Statistically insignificant ($p > 0.01$) values are left blank.)

```{r, fig.width=12, fig.height=10, fig.align='center', echo=FALSE}

df_econ <- df_WDI[, which(colnames(df_WDI) %in% economic_indicators)]
rcorr_out <- rcorr(scale(df_econ))
cormat_econ <- rcorr_out$r
pmat_econ <- rcorr_out$P
#corrplot(cormat_econ, type = "upper", order = "hclust", tl.col = "black", tl.srt = 45)
corrplot(cormat_econ, type="upper", order="hclust", p.mat = pmat_econ, sig.level = 0.01, insig = "blank", tl.col = "black", tl.srt = 45)
```

However, the correlation matrix format does not scale well. For the large number of variables used in this exercise, something a little fancier is required.

### 2.2 The PCA approach for large numbers of variables

Below, a PCA is conducted on the complete dataset of economic, environmental, population, infrastructure, health, and education variables for lower middle income countries. Results are interpreted using two visualization methods, first a biplot and then a loadings barchart.

#### 2.2.1 Getting a general idea of tradeoffs/synergies: the PCA biplot

A biplot is a good place to start when trying to discern tradeoffs, or any other sort of structure, in large datasets.

In the biplot, arrows pointing in the opposite direction indicate a tradeoff, while arrows pointing in the same direction are indicative of correlation or synergy.

```{r, fig.width=11, fig.height=8, fig.align='center'}

mat_in <- mat_zWDI
col_order <- colnames(mat_in)
n_ts <- ncol(mat_in)
row.names(mat_in) <- year_vec
res <- PCA(mat_in, graph = F)
fviz_pca_biplot(res)


```

The biplot is cluttered and hard to read, but certain characteristics begin to emerge if you look closely.

Note that things like mortality rate, deforestation, and military expenditures point roughly in the opposite direction of things like labor productivity (value added per worker) and primary school enrollment. Note also that employment in agriculture points in the opposite direction of employment in the services and industrial sectors.

This graphic is called a "biplot" because it also displays the years of observation. The years closest to a variable's arrow are the years in which that variable explained most of the variance in the data.

Note how the years arrange themselves in a consecutive, clockwise fashion. This can be interpreted as a storyline. The story begins in the lower left quadrant (early 1990s) with relatively high military expenditures, deforestation, mortality rates, and incidence of HIV, followed in the late 1990s and early 2000s (upper left quadrant) by increasing importance of employment in agriculture, lower overall unemployment, and higher female participation in the labor force. This is then followed in the late 2000s (upper right quadrant) by capital formation and economic growth across sectors, as well as CO2 emissions. Finally, in the most recent period (lower right quadrant), technology en masse (internet and mobile services), development assistance, labor productivity, education expenditures, and refugee populations become predominant indicators explaining variance in the data.

This provides a starting point to help orient and frame questions. But, again, the graphic is messy and hard to read, with several labels piled on top of each other. A more readable format is required to identify and quantify tradeoffs in a carefully enumerated fashion.

#### 2.2.2 Rigorous separation of signals from noise

PCA reduces a problem of several dozen or even hundreds of highly correlated dimensions to a problem of just a few orthogonal dimensions. The reduced group of dimensions is what is referred to by the term "principal components".

The influence each variable has on the overall evolution of the system is captured by its contribution to or "loading onto" each of these dimensions. Tradeoffs and synergies can thus be identified by examining the sign on these loadings. Loadings with the same sign correspond to variables that historically "pull" in the same direction, i.e. synergy. Loadings with opposite signs correspond to variables that pull in opposite directions, i.e. tradeoffs.

But before getting to the loadings, there is first the question of exactly how many of the principal components to retain.

In the literature, a number of arbitrary rules of thumb are followed, such as "retain only the dimensions that explain 90% of the variance". However, a more rigorous solution to this dilemma was developed long ago in the study of physical systems (Dehesa et al., 1983); and this has more recently been applied in financial analysis (Laloux et al. 1999). The method is based on an important result in the theory of random matrices which says that the maximum eigenvalue of any correlation matrix generated from a random matrix is a function of the number of variables and observations in the random matrix (Mehta, 2004). For a given data correlation matrix, then, only the dimensions with eigenvalues in excess of the corresponding maximum random matrix eigenvalue can be meaningfully distinguished from noise.

Below, the WDI data correlation matrix eigenvalue density (blue) is compared to the random matrix eigenvalue density (yellow).


```{r, fig.width=8, fig.height=4, fig.align='center'}

lam_cor <- as.data.frame(res$eig)$eigenvalue
lamcor_max <- max(lam_cor)
N_t <- nrow(mat_in)
N_c <- ncol(mat_in)
Q <- N_t / N_c
s_sq <- 1 - lamcor_max / N_c
#s_sq <- 1
lamrand_max <- s_sq * (1 + 1 / Q + 2 / sqrt(Q))
lamrand_min <- s_sq * (1 + 1 / Q - 2 / sqrt(Q))
lam <- seq(lamrand_min, lamrand_max, 0.001)
dens_rand <- Q / (2 * pi * s_sq) * sqrt((lamrand_max - lam) * (lam - lamrand_min)) / lam
df_e <- data.frame(eigenvalues = lam_cor)
#------------------------------------------------------------
gg <- ggplot()
gg <- gg + geom_density(data = df_e, aes(x = eigenvalues, color = "Correlation Matrix"), lwd = 1.1)
gg <- gg + geom_line(data = data.frame(x = lam, y = dens_rand), aes(x = x, y = y, color = "Random matrix"), lwd = 1.1)
gg <- gg + scale_colour_manual(name = "Eigenvalue density", 
                               values = c(`Correlation Matrix` = "blue", `Random matrix` = "orange"))
gg
#------------------------------------------------------------
# How many signals?
mat_eigvecs <- res$var$coord
ind_deviating_from_noise <- which(lam_cor > (lamrand_max + 5 * 10^-1))
lam_signals <- lam_cor[ind_deviating_from_noise]
n_signals <- length(lam_signals)
#print(paste("Number of signals: ", n_signals))


```

The graphic shows that only the three leading eigenvalues of the WDI correlation matrix extend beyond the upper edge of the random matrix eigenvalue density. Hence, only the first three principal components should be retained as signals, and the rest are discarded as noise.

#### 2.2.3 Precise quantification of tradeoffs/synergies: the PCA loadings bar chart(s)

The importance of each signal in determining the overall evolution of the system is proportional to its corresponding eigenvalue. Signal 1 is the signal with the highest eigenvalue. The magnitude and direction of each variable's influence over a given signal's trajectory can be assessed by looking at the loadings.


```{r, fig.width=15, fig.height=12, fig.align='center', echo=FALSE}
#------------------------------------------------------------
# Set sign of eigenvectors such that they
# best conform to the input time series
mat_PC_signals <- mat_eigvecs[, ind_deviating_from_noise]
mat_signals_ts <- mat_in %*% mat_PC_signals
mat_signals_ts <- mat_signals_ts %*% diag(1 / lam_signals)
#ts_avg <- mat_in %*% rep(1, N_c) * 1 / N_c

#mean(mat_in[1,])
ts_avg <- rowMeans(mat_in)
#ts_avg[1]
for(i in 1:n_signals){
  sse <- sum((mat_signals_ts[, i] - ts_avg)^2)
  sse_neg <- sum((-mat_signals_ts[, i] - ts_avg)^2)
  sse_vec <- c(sse, sse_neg)
  if(which(sse_vec == min(sse_vec)) == 2){
    mat_PC_signals[, i] <- -mat_PC_signals[, i]
  }
  lm_out <- lm(y ~ x, data = data.frame(y = mat_signals_ts[, i], x = ts_avg))
  sum_lm <- summary(lm_out)
  param <- sum_lm$coefficients[2]
  mat_signals_ts[, i] <- 1 / param * mat_signals_ts[, i]
  mat_PC_signals[, i] <- 1 / param * mat_PC_signals[, i]
  
}
#------------------------------------------------------------
df_plot <- data.frame(Indicator = col_order, mat_PC_signals)
signal_id <- paste("Signal", c(1:n_signals))
colnames(df_plot)[2:(n_signals + 1)] <- signal_id
gathercols <- as.character(signal_id)
df_plot <- gather_(df_plot, "Signal", "Loading", gathercols)
df_plot$`Indicator Type` <- NA
u <- as.character(df_plot$Indicator)
#df_plot$`Indicator Type` <- as.character(df_plot$`Indicator Type`)
for(i in 1:length(list_indicatorTypes)){
  ind <- which(u %in% list_indicatorTypes[[i]])
  df_plot$`Indicator Type`[ind] <- indicator_type_names[i]
}
df_plot$`Indicator Type` <- as.factor(df_plot$`Indicator Type`)
xx <- df_plot$`Indicator Type`
df_plot$Indicator <- factor(df_plot$Indicator, levels = unique(df_plot$Indicator[order(xx)]))
gg <- ggplot(df_plot, aes(x = Indicator, y = Loading, fill = `Indicator Type`))
gg <- gg + geom_bar(stat = "identity", position = "dodge")
gg <- gg + facet_wrap(~ Signal, nrow = 1)
gg <- gg + labs(title = these_countries)
gg <- gg + theme(axis.text.y = element_text(face = "bold", size = 13),
                 axis.text.x = element_text(face = "bold", size = 11),
                 axis.title.y = element_text(face = "bold", size = 11),
                 axis.title.x = element_text(face = "bold", size = 11))
gg <- gg + coord_equal()
# if(N_c <= 50){
#   gg <- gg + theme(axis.text.x = element_text(angle = 60, hjust = 1),
#                    axis.title.y = element_blank())
# }else{
#   gg <- gg + theme(axis.text.x = element_blank(),
#                    axis.title.y = element_blank())
# }
gg <- gg + coord_flip()
gg
#------------------------------------------------------------

```

Note that the loadings on signal 1 are relatively uniform in their magnitude. This is because Signal 1 essentially represents the average trajectory of the entire dataset of indicators.

The loadings on Signal 1 answer the central question motivating this concept note. They reveal the historical tradeoffs and synergies acting on the average evolution of the system. Loadings with the same sign indicate synergies (variables pulling in the same direction). Loadings with opposite signs indicate tradeoffs (variables pulling in opposite directions).

The loadings on Signals 2 and 3, meanwhile, are of varying magnitude, revealing a particular "thematic character" associated with these signals. Signal 2 is associated with economic growth, low unemployment, low population growth and urbanization rates, high mineral and energy---but not forest---resource depletion, high agricultural greenhouse gas emissions, but low overall CO2 emissions per capita, high energy productivity, trade, among other things. Signal 3 is associated with economic stagnation, high dependence on development assistance, refugee populations, high population growth and urbanization rates, high CO2 emissions per capita, low energy productivity, a lack of trade, among other things.


#### 2.2.4 Signal time series

The signal time series are plotted in the following graphic. The thick orange line appearing in all of the plots represents the average over all inidcators. The black lines represent the signals. Note how Signal 1 hews closely to the average, while the other signals represent forces pushing and pulling on the average.

```{r, fig.width=12, fig.height=4, fig.align='center', echo=FALSE}

df_plot1 <- data.frame(Year = as.integer(names(ts_avg)), ts_avg)
df_plot2 <- data.frame(Year = as.integer(names(ts_avg)), mat_signals_ts)
signal_id <- paste("Signal", c(1:n_signals))
colnames(df_plot2)[2:(n_signals + 1)] <- signal_id
gathercols <- signal_id
df_plot2 <- df_plot2 %>% gather_("Signal", "Value", gathercols)
gg <- ggplot()
gg <- gg + geom_line(data = df_plot1, aes(x = Year, y = ts_avg), color = "orange", lwd = 1.2)
gg <- gg + geom_line(data = df_plot2, aes(x = Year, y = Value))
gg <- gg + facet_wrap(~ Signal, nrow = 1)
gg <- gg + theme(axis.title.y = element_blank())
gg


```

### 2.3 Careful

* As always, correlation is not necessarily indicative of causation. For example, the opposite signs on the loadings for development assistance and GDP growth in Signal 3 do not necessarily mean that a tradeoff exists between growth and aid. Rather, it indicates an historical negative correlation between the two, probably because economically stagnant countries are more obvious aid targets than economically active countries.

* This analysis captures historical tradeoffs. Sometimes, historical trends are indicative of empirical laws---Bennet's Law, Engel's Law, etc. But not always! Looking forward, we must be open to the possibility that historical tradeoffs between certain strategic objectives (economic and environmental, for example) can be transformed into synergies.

### 2.4 One more example: Low income countries 

#### 2.4.1 Loadings bar charts

```{r, fig.width=15, fig.height=12, fig.align='center', echo=FALSE}
#-------------------------------------------------------------
these_countries <- "Low income"
#-------------------------------------------------------------
df_WDI <- subset(WDI_long, Country %in% c(these_countries))
df_WDI <- subset(df_WDI, Indicator %in% indicator_vec)
df_WDI <- df_WDI %>% spread(Indicator, Value)
df_WDI$Year <- as.integer(df_WDI$Year)
df_WDI <- subset(df_WDI, Year >= 1991)
df_WDI <- subset(df_WDI, Year <= 2016)
df_WDI$`Individuals using the Internet (% of population)`[which(df_WDI$Year < 1994)] <- 0
#-------------------------------------------------------------
year_vec <- df_WDI$Year
df_WDI <- df_WDI[, -c(1, 2)]
out <- apply(df_WDI, 2, function(x) length(which(is.na(x))))
#table(out)
ind_rm <- which(as.numeric(out) > 10)
#length(ind_rm)
df_WDI <- df_WDI[, -ind_rm]
#ncol(df_WDI)
ind_rp <- which(is.na(df_WDI[1, ]))
for(i in 1:length(ind_rp)){
  df_WDI[1, ind_rp[i]] <- mean(df_WDI[, ind_rp[i]], na.rm = T)
}
ind_rp <- which(is.na(df_WDI[nrow(df_WDI), ]))
for(i in 1:length(ind_rp)){
  df_WDI[nrow(df_WDI), ind_rp[i]] <- mean(df_WDI[, ind_rp[i]], na.rm = T)
}

df_WDI <- as.data.frame(na.approx(df_WDI[, -c(1, 2)]))
#class(df_WDI)
out <- apply(df_WDI, 2, function(x) length(which(is.na(x))))
#table(out)
#which(as.numeric(out) > 0)
#colnames(df_WDI)[which(as.numeric(out) > 0)]
mat_zWDI <- scale(df_WDI)
#------------------------------------------------------------
mat_in <- mat_zWDI
col_order <- colnames(mat_in)
n_ts <- ncol(mat_in)
row.names(mat_in) <- year_vec
res <- PCA(mat_in, graph = F)
#fviz_pca_biplot(res)
#------------------------------------------------------------
lam_cor <- as.data.frame(res$eig)$eigenvalue
lamcor_max <- max(lam_cor)
N_t <- nrow(mat_in)
N_c <- ncol(mat_in)
Q <- N_t / N_c
s_sq <- 1 - lamcor_max / N_c
#s_sq <- 1
lamrand_max <- s_sq * (1 + 1 / Q + 2 / sqrt(Q))
lamrand_min <- s_sq * (1 + 1 / Q - 2 / sqrt(Q))
lam <- seq(lamrand_min, lamrand_max, 0.001)
dens_rand <- Q / (2 * pi * s_sq) * sqrt((lamrand_max - lam) * (lam - lamrand_min)) / lam
df_e <- data.frame(eigenvalues = lam_cor)
#------------------------------------------------------------
# How many signals?
mat_eigvecs <- res$var$coord
ind_deviating_from_noise <- which(lam_cor > (lamrand_max + 5 * 10^-1))
lam_signals <- lam_cor[ind_deviating_from_noise]
n_signals <- length(lam_signals)
#print(paste("Number of signals: ", n_signals))
#------------------------------------------------------------
# Set sign of eigenvectors such that they
# best conform to the input time series
mat_PC_signals <- mat_eigvecs[, ind_deviating_from_noise]
mat_signals_ts <- mat_in %*% mat_PC_signals
mat_signals_ts <- mat_signals_ts %*% diag(1 / lam_signals)
#ts_avg <- mat_in %*% rep(1, N_c) * 1 / N_c

#mean(mat_in[1,])
ts_avg <- rowMeans(mat_in)
#ts_avg[1]
for(i in 1:n_signals){
  sse <- sum((mat_signals_ts[, i] - ts_avg)^2)
  sse_neg <- sum((-mat_signals_ts[, i] - ts_avg)^2)
  sse_vec <- c(sse, sse_neg)
  if(which(sse_vec == min(sse_vec)) == 2){
    mat_PC_signals[, i] <- -mat_PC_signals[, i]
  }
  lm_out <- lm(y ~ x, data = data.frame(y = mat_signals_ts[, i], x = ts_avg))
  sum_lm <- summary(lm_out)
  param <- sum_lm$coefficients[2]
  mat_signals_ts[, i] <- 1 / param * mat_signals_ts[, i]
  mat_PC_signals[, i] <- 1 / param * mat_PC_signals[, i]
}

#------------------------------------------------------------
df_plot <- data.frame(Indicator = col_order, mat_PC_signals)
signal_id <- paste("Signal", c(1:n_signals))
colnames(df_plot)[2:(n_signals + 1)] <- signal_id
gathercols <- as.character(signal_id)
df_plot <- gather_(df_plot, "Signal", "Loading", gathercols)
df_plot$`Indicator Type` <- NA
u <- as.character(df_plot$Indicator)
#df_plot$`Indicator Type` <- as.character(df_plot$`Indicator Type`)
for(i in 1:length(list_indicatorTypes)){
  ind <- which(u %in% list_indicatorTypes[[i]])
  df_plot$`Indicator Type`[ind] <- indicator_type_names[i]
}
df_plot$`Indicator Type` <- as.factor(df_plot$`Indicator Type`)
xx <- df_plot$`Indicator Type`
df_plot$Indicator <- factor(df_plot$Indicator, levels = unique(df_plot$Indicator[order(xx)]))
gg <- ggplot(df_plot, aes(x = Indicator, y = Loading, fill = `Indicator Type`))
gg <- gg + geom_bar(stat = "identity", position = "dodge")
gg <- gg + facet_wrap(~ Signal, nrow = 1)
gg <- gg + labs(title = these_countries)
gg <- gg + theme(axis.text.y = element_text(face = "bold", size = 13),
                 axis.text.x = element_text(face = "bold", size = 11),
                 axis.title.y = element_text(face = "bold", size = 11),
                 axis.title.x = element_text(face = "bold", size = 11))
gg <- gg + coord_equal()
# if(N_c <= 50){
#   gg <- gg + theme(axis.text.x = element_text(angle = 60, hjust = 1),
#                    axis.title.y = element_blank())
# }else{
#   gg <- gg + theme(axis.text.x = element_blank(),
#                    axis.title.y = element_blank())
# }
gg <- gg + coord_flip()
gg
#------------------------------------------------------------


```

#### 2.4.2 Signal trajectories

```{r, fig.width=12, fig.height=4, fig.align='center', echo=FALSE}

df_plot1 <- data.frame(Year = as.integer(names(ts_avg)), ts_avg)
df_plot2 <- data.frame(Year = as.integer(names(ts_avg)), mat_signals_ts)
signal_id <- paste("Signal", c(1:n_signals))
colnames(df_plot2)[2:(n_signals + 1)] <- signal_id
gathercols <- signal_id
df_plot2 <- df_plot2 %>% gather_("Signal", "Value", gathercols)
gg <- ggplot()
gg <- gg + geom_line(data = df_plot1, aes(x = Year, y = ts_avg), color = "orange", lwd = 1.2)
gg <- gg + geom_line(data = df_plot2, aes(x = Year, y = Value))
gg <- gg + facet_wrap(~ Signal, nrow = 1)
gg <- gg + theme(axis.title.y = element_blank())
gg


```


<!-- ```{r, echo=FALSE} -->

<!-- sig2 <- apply(mat_signals_ts, 2, sd) -->
<!-- mat_cov <- diag(sig2) -->
<!-- #nab_mu <- rep(0, n_signals) -->
<!-- nab_c <- rep(1, n_signals) -->
<!-- #mat_nab <- as.matrix(cbind(nab_mu, nab_c)) -->

<!-- M <- t(nab_c) %*% mat_cov %*% nab_c -->
<!-- M_inv <- solve(M) -->


<!-- ``` -->



## References

Abdi, H., & Williams, L. J. (2010). Principal component analysis. Wiley interdisciplinary reviews: computational statistics, 2(4), 433-459.

Dehesa, J. S., Gomez, J. M. G., & Polls, A. (1983). Mathematical and computational methods in nuclear physics.

Gopikrishnan, P., Rosenow, B., Plerou, V., & Stanley, H. E. (2001). Quantifying and interpreting collective behavior in financial markets. Physical Review E, 64(3), 035106.

Laloux, L., Cizeau, P., Bouchaud, J. P., & Potters, M. (1999). Noise dressing of financial correlation matrices. Physical review letters, 83(7), 1467.

Mehta, M. L. (2004). Random matrices (Vol. 142). Elsevier.
